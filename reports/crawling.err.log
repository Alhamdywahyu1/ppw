Traceback (most recent call last):
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/python/3.12.1/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import requests
import csv

api_key = "4b25841b8ccff165e4b251048a414037"

url = "https://api.springernature.com/meta/v2/json"
params = {
    "q": "web mining",
    "api_key": api_key,
    "p": 10
}

response = requests.get(url, params=params, timeout=10)

if response.status_code == 200:
    data = response.json()

    # buka file CSV dan tulis header + rows
    with open("springer_results.csv", "w", newline="", encoding="utf-8") as csvfile:
        fieldnames = ["doi", "title", "abstract", "publicationName", "isbn", "url"]
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()

        for record in data.get("records", []):
            writer.writerow({
                "doi": record.get("doi", "N/A"),
                "title": record.get("title", "No title"),
                "abstract": record.get("abstract", "No abstract"),
                "publicationName": record.get("publicationName", ""),
                "isbn": record.get("isbn", ""),
                "url": record.get("url", "")
            })

    print("Sukses: hasil disimpan di springer_results.csv")
else:
    print("Error:", response.status_code, response.text)

------------------


[31m---------------------------------------------------------------------------[39m
[31mTimeoutError[39m                              Traceback (most recent call last)
[36mFile [39m[32m~/.local/lib/python3.12/site-packages/urllib3/connectionpool.py:534[39m, in [36mHTTPConnectionPool._make_request[39m[34m(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)[39m
[32m    533[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m534[39m     response = [43mconn[49m[43m.[49m[43mgetresponse[49m[43m([49m[43m)[49m
[32m    535[39m [38;5;28;01mexcept[39;00m (BaseSSLError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m e:

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/urllib3/connection.py:565[39m, in [36mHTTPConnection.getresponse[39m[34m(self)[39m
[32m    564[39m [38;5;66;03m# Get the response from http.client.HTTPConnection[39;00m
[32m--> [39m[32m565[39m httplib_response = [38;5;28;43msuper[39;49m[43m([49m[43m)[49m[43m.[49m[43mgetresponse[49m[43m([49m[43m)[49m
[32m    567[39m [38;5;28;01mtry[39;00m:

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/http/client.py:1419[39m, in [36mHTTPConnection.getresponse[39m[34m(self)[39m
[32m   1418[39m [38;5;28;01mtry[39;00m:
[32m-> [39m[32m1419[39m     [43mresponse[49m[43m.[49m[43mbegin[49m[43m([49m[43m)[49m
[32m   1420[39m [38;5;28;01mexcept[39;00m [38;5;167;01mConnectionError[39;00m:

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/http/client.py:331[39m, in [36mHTTPResponse.begin[39m[34m(self)[39m
[32m    330[39m [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:
[32m--> [39m[32m331[39m     version, status, reason = [38;5;28;43mself[39;49m[43m.[49m[43m_read_status[49m[43m([49m[43m)[49m
[32m    332[39m     [38;5;28;01mif[39;00m status != CONTINUE:

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/http/client.py:292[39m, in [36mHTTPResponse._read_status[39m[34m(self)[39m
[32m    291[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_read_status[39m([38;5;28mself[39m):
[32m--> [39m[32m292[39m     line = [38;5;28mstr[39m([38;5;28;43mself[39;49m[43m.[49m[43mfp[49m[43m.[49m[43mreadline[49m[43m([49m[43m_MAXLINE[49m[43m [49m[43m+[49m[43m [49m[32;43m1[39;49m[43m)[49m, [33m"[39m[33miso-8859-1[39m[33m"[39m)
[32m    293[39m     [38;5;28;01mif[39;00m [38;5;28mlen[39m(line) > _MAXLINE:

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/socket.py:707[39m, in [36mSocketIO.readinto[39m[34m(self, b)[39m
[32m    706[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m707[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_sock[49m[43m.[49m[43mrecv_into[49m[43m([49m[43mb[49m[43m)[49m
[32m    708[39m [38;5;28;01mexcept[39;00m timeout:

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/ssl.py:1253[39m, in [36mSSLSocket.recv_into[39m[34m(self, buffer, nbytes, flags)[39m
[32m   1250[39m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[32m   1251[39m           [33m"[39m[33mnon-zero flags not allowed in calls to recv_into() on [39m[38;5;132;01m%s[39;00m[33m"[39m %
[32m   1252[39m           [38;5;28mself[39m.[34m__class__[39m)
[32m-> [39m[32m1253[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43mread[49m[43m([49m[43mnbytes[49m[43m,[49m[43m [49m[43mbuffer[49m[43m)[49m
[32m   1254[39m [38;5;28;01melse[39;00m:

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/ssl.py:1105[39m, in [36mSSLSocket.read[39m[34m(self, len, buffer)[39m
[32m   1104[39m [38;5;28;01mif[39;00m buffer [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m-> [39m[32m1105[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_sslobj[49m[43m.[49m[43mread[49m[43m([49m[38;5;28;43mlen[39;49m[43m,[49m[43m [49m[43mbuffer[49m[43m)[49m
[32m   1106[39m [38;5;28;01melse[39;00m:

[31mTimeoutError[39m: The read operation timed out

The above exception was the direct cause of the following exception:

[31mReadTimeoutError[39m                          Traceback (most recent call last)
[36mFile [39m[32m~/.local/lib/python3.12/site-packages/requests/adapters.py:667[39m, in [36mHTTPAdapter.send[39m[34m(self, request, stream, timeout, verify, cert, proxies)[39m
[32m    666[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m667[39m     resp = [43mconn[49m[43m.[49m[43murlopen[49m[43m([49m
[32m    668[39m [43m        [49m[43mmethod[49m[43m=[49m[43mrequest[49m[43m.[49m[43mmethod[49m[43m,[49m
[32m    669[39m [43m        [49m[43murl[49m[43m=[49m[43murl[49m[43m,[49m
[32m    670[39m [43m        [49m[43mbody[49m[43m=[49m[43mrequest[49m[43m.[49m[43mbody[49m[43m,[49m
[32m    671[39m [43m        [49m[43mheaders[49m[43m=[49m[43mrequest[49m[43m.[49m[43mheaders[49m[43m,[49m
[32m    672[39m [43m        [49m[43mredirect[49m[43m=[49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[32m    673[39m [43m        [49m[43massert_same_host[49m[43m=[49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[32m    674[39m [43m        [49m[43mpreload_content[49m[43m=[49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[32m    675[39m [43m        [49m[43mdecode_content[49m[43m=[49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[32m    676[39m [43m        [49m[43mretries[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43mmax_retries[49m[43m,[49m
[32m    677[39m [43m        [49m[43mtimeout[49m[43m=[49m[43mtimeout[49m[43m,[49m
[32m    678[39m [43m        [49m[43mchunked[49m[43m=[49m[43mchunked[49m[43m,[49m
[32m    679[39m [43m    [49m[43m)[49m
[32m    681[39m [38;5;28;01mexcept[39;00m (ProtocolError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m err:

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/urllib3/connectionpool.py:841[39m, in [36mHTTPConnectionPool.urlopen[39m[34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)[39m
[32m    839[39m     new_e = ProtocolError([33m"[39m[33mConnection aborted.[39m[33m"[39m, new_e)
[32m--> [39m[32m841[39m retries = [43mretries[49m[43m.[49m[43mincrement[49m[43m([49m
[32m    842[39m [43m    [49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43merror[49m[43m=[49m[43mnew_e[49m[43m,[49m[43m [49m[43m_pool[49m[43m=[49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43m_stacktrace[49m[43m=[49m[43msys[49m[43m.[49m[43mexc_info[49m[43m([49m[43m)[49m[43m[[49m[32;43m2[39;49m[43m][49m
[32m    843[39m [43m[49m[43m)[49m
[32m    844[39m retries.sleep()

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/urllib3/util/retry.py:474[39m, in [36mRetry.increment[39m[34m(self, method, url, response, error, _pool, _stacktrace)[39m
[32m    473[39m [38;5;28;01mif[39;00m read [38;5;129;01mis[39;00m [38;5;28;01mFalse[39;00m [38;5;129;01mor[39;00m method [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m._is_method_retryable(method):
[32m--> [39m[32m474[39m     [38;5;28;01mraise[39;00m [43mreraise[49m[43m([49m[38;5;28;43mtype[39;49m[43m([49m[43merror[49m[43m)[49m[43m,[49m[43m [49m[43merror[49m[43m,[49m[43m [49m[43m_stacktrace[49m[43m)[49m
[32m    475[39m [38;5;28;01melif[39;00m read [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/urllib3/util/util.py:39[39m, in [36mreraise[39m[34m(tp, value, tb)[39m
[32m     38[39m         [38;5;28;01mraise[39;00m value.with_traceback(tb)
[32m---> [39m[32m39[39m     [38;5;28;01mraise[39;00m value
[32m     40[39m [38;5;28;01mfinally[39;00m:

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/urllib3/connectionpool.py:787[39m, in [36mHTTPConnectionPool.urlopen[39m[34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)[39m
[32m    786[39m [38;5;66;03m# Make the request on the HTTPConnection object[39;00m
[32m--> [39m[32m787[39m response = [38;5;28;43mself[39;49m[43m.[49m[43m_make_request[49m[43m([49m
[32m    788[39m [43m    [49m[43mconn[49m[43m,[49m
[32m    789[39m [43m    [49m[43mmethod[49m[43m,[49m
[32m    790[39m [43m    [49m[43murl[49m[43m,[49m
[32m    791[39m [43m    [49m[43mtimeout[49m[43m=[49m[43mtimeout_obj[49m[43m,[49m
[32m    792[39m [43m    [49m[43mbody[49m[43m=[49m[43mbody[49m[43m,[49m
[32m    793[39m [43m    [49m[43mheaders[49m[43m=[49m[43mheaders[49m[43m,[49m
[32m    794[39m [43m    [49m[43mchunked[49m[43m=[49m[43mchunked[49m[43m,[49m
[32m    795[39m [43m    [49m[43mretries[49m[43m=[49m[43mretries[49m[43m,[49m
[32m    796[39m [43m    [49m[43mresponse_conn[49m[43m=[49m[43mresponse_conn[49m[43m,[49m
[32m    797[39m [43m    [49m[43mpreload_content[49m[43m=[49m[43mpreload_content[49m[43m,[49m
[32m    798[39m [43m    [49m[43mdecode_content[49m[43m=[49m[43mdecode_content[49m[43m,[49m
[32m    799[39m [43m    [49m[43m*[49m[43m*[49m[43mresponse_kw[49m[43m,[49m
[32m    800[39m [43m[49m[43m)[49m
[32m    802[39m [38;5;66;03m# Everything went great![39;00m

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/urllib3/connectionpool.py:536[39m, in [36mHTTPConnectionPool._make_request[39m[34m(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)[39m
[32m    535[39m [38;5;28;01mexcept[39;00m (BaseSSLError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m e:
[32m--> [39m[32m536[39m     [38;5;28;43mself[39;49m[43m.[49m[43m_raise_timeout[49m[43m([49m[43merr[49m[43m=[49m[43me[49m[43m,[49m[43m [49m[43murl[49m[43m=[49m[43murl[49m[43m,[49m[43m [49m[43mtimeout_value[49m[43m=[49m[43mread_timeout[49m[43m)[49m
[32m    537[39m     [38;5;28;01mraise[39;00m

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/urllib3/connectionpool.py:367[39m, in [36mHTTPConnectionPool._raise_timeout[39m[34m(self, err, url, timeout_value)[39m
[32m    366[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(err, SocketTimeout):
[32m--> [39m[32m367[39m     [38;5;28;01mraise[39;00m ReadTimeoutError(
[32m    368[39m         [38;5;28mself[39m, url, [33mf[39m[33m"[39m[33mRead timed out. (read timeout=[39m[38;5;132;01m{[39;00mtimeout_value[38;5;132;01m}[39;00m[33m)[39m[33m"[39m
[32m    369[39m     ) [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01merr[39;00m
[32m    371[39m [38;5;66;03m# See the above comment about EAGAIN in Python 3.[39;00m

[31mReadTimeoutError[39m: HTTPSConnectionPool(host='api.springernature.com', port=443): Read timed out. (read timeout=10)

During handling of the above exception, another exception occurred:

[31mReadTimeout[39m                               Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[3][39m[32m, line 13[39m
[32m      6[39m url = [33m"[39m[33mhttps://api.springernature.com/meta/v2/json[39m[33m"[39m
[32m      7[39m params = {
[32m      8[39m     [33m"[39m[33mq[39m[33m"[39m: [33m"[39m[33mweb mining[39m[33m"[39m,
[32m      9[39m     [33m"[39m[33mapi_key[39m[33m"[39m: api_key,
[32m     10[39m     [33m"[39m[33mp[39m[33m"[39m: [32m10[39m
[32m     11[39m }
[32m---> [39m[32m13[39m response = [43mrequests[49m[43m.[49m[43mget[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mparams[49m[43m=[49m[43mparams[49m[43m,[49m[43m [49m[43mtimeout[49m[43m=[49m[32;43m10[39;49m[43m)[49m
[32m     15[39m [38;5;28;01mif[39;00m response.status_code == [32m200[39m:
[32m     16[39m     data = response.json()

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/requests/api.py:73[39m, in [36mget[39m[34m(url, params, **kwargs)[39m
[32m     62[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mget[39m(url, params=[38;5;28;01mNone[39;00m, **kwargs):
[32m     63[39m [38;5;250m    [39m[33mr[39m[33;03m"""Sends a GET request.[39;00m
[32m     64[39m 
[32m     65[39m [33;03m    :param url: URL for the new :class:`Request` object.[39;00m
[32m   (...)[39m[32m     70[39m [33;03m    :rtype: requests.Response[39;00m
[32m     71[39m [33;03m    """[39;00m
[32m---> [39m[32m73[39m     [38;5;28;01mreturn[39;00m [43mrequest[49m[43m([49m[33;43m"[39;49m[33;43mget[39;49m[33;43m"[39;49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43mparams[49m[43m=[49m[43mparams[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/requests/api.py:59[39m, in [36mrequest[39m[34m(method, url, **kwargs)[39m
[32m     55[39m [38;5;66;03m# By using the 'with' statement we are sure the session is closed, thus we[39;00m
[32m     56[39m [38;5;66;03m# avoid leaving sockets open which can trigger a ResourceWarning in some[39;00m
[32m     57[39m [38;5;66;03m# cases, and look like a memory leak in others.[39;00m
[32m     58[39m [38;5;28;01mwith[39;00m sessions.Session() [38;5;28;01mas[39;00m session:
[32m---> [39m[32m59[39m     [38;5;28;01mreturn[39;00m [43msession[49m[43m.[49m[43mrequest[49m[43m([49m[43mmethod[49m[43m=[49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m=[49m[43murl[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/requests/sessions.py:589[39m, in [36mSession.request[39m[34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[39m
[32m    584[39m send_kwargs = {
[32m    585[39m     [33m"[39m[33mtimeout[39m[33m"[39m: timeout,
[32m    586[39m     [33m"[39m[33mallow_redirects[39m[33m"[39m: allow_redirects,
[32m    587[39m }
[32m    588[39m send_kwargs.update(settings)
[32m--> [39m[32m589[39m resp = [38;5;28;43mself[39;49m[43m.[49m[43msend[49m[43m([49m[43mprep[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43msend_kwargs[49m[43m)[49m
[32m    591[39m [38;5;28;01mreturn[39;00m resp

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/requests/sessions.py:703[39m, in [36mSession.send[39m[34m(self, request, **kwargs)[39m
[32m    700[39m start = preferred_clock()
[32m    702[39m [38;5;66;03m# Send the request[39;00m
[32m--> [39m[32m703[39m r = [43madapter[49m[43m.[49m[43msend[49m[43m([49m[43mrequest[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m    705[39m [38;5;66;03m# Total elapsed time of the request (approximately)[39;00m
[32m    706[39m elapsed = preferred_clock() - start

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/requests/adapters.py:713[39m, in [36mHTTPAdapter.send[39m[34m(self, request, stream, timeout, verify, cert, proxies)[39m
[32m    711[39m     [38;5;28;01mraise[39;00m SSLError(e, request=request)
[32m    712[39m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(e, ReadTimeoutError):
[32m--> [39m[32m713[39m     [38;5;28;01mraise[39;00m ReadTimeout(e, request=request)
[32m    714[39m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(e, _InvalidHeader):
[32m    715[39m     [38;5;28;01mraise[39;00m InvalidHeader(e, request=request)

[31mReadTimeout[39m: HTTPSConnectionPool(host='api.springernature.com', port=443): Read timed out. (read timeout=10)

